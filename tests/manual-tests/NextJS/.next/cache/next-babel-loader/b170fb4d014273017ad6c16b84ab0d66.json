{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useStateChild.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react'; // import { connect } from 'react-redux';\n\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseStateChild = () => {\n  const {\n    0: count2,\n    1: setCount2\n  } = useState(0);\n  const {\n    0: count3,\n    1: setCount3\n  } = useState(1000);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Child Component Count Increase (UseState):\", ` ${count2}`), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Child Component Count Decrease (UseState):\", ` ${count3}`), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      setCount2(lastCount => lastCount + 1);\n      setCount3(lastCount => lastCount - 1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Click Here to Change Both Child Counts Simultaneously\")));\n};\n\nexport default UseStateChild; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":{"version":3,"sources":["/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useStateChild.js"],"names":["React","useState","UseStateChild","count2","setCount2","count3","setCount3","lastCount"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBH,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBL,QAAQ,CAAC,IAAD,CAApC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI,IAAGE,MAAO,EAFd,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAEI,IAAGE,MAAO,EAFd,CALF,EAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,SAAS,CAACG,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAT;AACAD,MAAAA,SAAS,CAACC,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAAT;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAVF,CADF,CADF;AAwBD,CA5BD;;AA8BA,eAAeL,aAAf,C,CACA","sourcesContent":["import React, { useState } from 'react';\n// import { connect } from 'react-redux';\nimport './styles.sass';\n\n// import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseStateChild = () => {\n  const [count2, setCount2] = useState(0);\n  const [count3, setCount3] = useState(1000);\n\n  return (\n    <div>\n      <div>\n        <div>\n          Child Component Count Increase (UseState):\n          {` ${count2}`}\n        </div>\n        <div>\n          Child Component Count Decrease (UseState):\n          {` ${count3}`}\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            setCount2(lastCount => lastCount + 1);\n            setCount3(lastCount => lastCount - 1);\n          }}\n        >\n          Click Here to Change Both Child Counts Simultaneously\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UseStateChild;\n// export default connect(mapStateToProps, mapDispatchToProps)(Scenes);\n"]},"metadata":{},"sourceType":"module"}