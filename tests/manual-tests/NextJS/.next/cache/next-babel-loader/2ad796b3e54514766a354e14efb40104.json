{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react'; // import { connect } from 'react-redux';\n\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nvar UseEffectAndState = function UseEffectAndState() {\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(0),\n      intervalCount = _useState2[0],\n      setIntervalCount = _useState2[1];\n\n  var _useState3 = useState(0),\n      buttonCount = _useState3[0],\n      setButtonCount = _useState3[1];\n\n  var _useState4 = useState(0),\n      effectCount = _useState4[0],\n      setEffectCount = _useState4[1];\n\n  useEffect(function () {\n    var effectInterval = setInterval(function () {\n      return setCount(function (prevCount) {\n        return prevCount + 1;\n      });\n    }, 50);\n    if (intervalCount === 20) clearInterval(effectInterval);\n    return function () {\n      return clearInterval(effectInterval);\n    };\n  }, [intervalCount]);\n  useEffect(function () {\n    if (count % 10 === 0) setIntervalCount(function (prevCount) {\n      return prevCount + 1;\n    });\n  }, [count]);\n  useEffect(function () {\n    if (!(buttonCount % 2)) setEffectCount(function (lastCount) {\n      return lastCount + 1;\n    });\n  }, [buttonCount]);\n  return __jsx(React.Fragment, null, \"\".concat(count, \". This next number increments at each interval of 10 and stops both counters once its value reaches 20 => \").concat(intervalCount), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, \"Button Count\", buttonCount), __jsx(\"button\", {\n    type: \"button\",\n    className: \"mt-3\",\n    onClick: function onClick() {\n      return setButtonCount(function (buttonCountVal) {\n        return buttonCountVal + 1;\n      });\n    }\n  }, \"Click Here to Increase the State Count Directly Above\"), __jsx(\"div\", {\n    className: \"mt-3 mb-5\"\n  }, \"Effect Count Should Increase When Button Count is Even:\", effectCount), __jsx(UseStateChild, null));\n};\n\nexport default UseEffectAndState; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}