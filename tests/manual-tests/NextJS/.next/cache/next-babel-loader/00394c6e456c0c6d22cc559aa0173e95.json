{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store'; // import { connect } from 'react-redux';\n\nimport './styles.sass';\nimport UseState from './sandboxes/useState';\nimport UseEffect from './sandboxes/useEffect';\nimport UseContext from './sandboxes/useContext';\nimport UseMemo from './sandboxes/useMemo';\nimport Redux from './sandboxes/redux';\nimport Router from './sandboxes/router';\nimport SetState from './sandboxes/setState';\nimport ComponentDidMount from './sandboxes/componentDidMount';\nimport AppContextProvider from '../context/appContextProvider'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nvar Scenes = function Scenes() {\n  var _useState = useState('UseState'),\n      activeSandbox = _useState[0],\n      setActiveSandbox = _useState[1];\n\n  function changeSandbox(e) {\n    var innerText = e.target.innerText;\n    setActiveSandbox(innerText);\n  }\n\n  function sandboxButtons() {\n    var buttonsArray = ['UseState', 'UseEffect', 'UseContext', 'UseMemo', '|', 'Redux', 'Router', '|', 'SetState', 'ComponentDidMount'];\n    var buttons = buttonsArray.map(function (buttonName, index) {\n      if (buttonName === '|') {\n        return __jsx(\"div\", {\n          key: buttonName + index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, buttonName);\n      }\n\n      return __jsx(\"button\", {\n        key: buttonName + index,\n        type: \"button\",\n        onClick: changeSandbox,\n        style: activeSandbox === buttonName ? {\n          outline: 'none',\n          backgroundColor: 'cornflowerblue'\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, buttonName);\n    });\n    return __jsx(React.Fragment, null, buttons);\n  }\n\n  function displaySandbox() {\n    switch (activeSandbox) {\n      case 'UseState':\n        return __jsx(UseState, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n\n      case 'UseEffect':\n        return __jsx(UseEffect, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n\n      case 'UseContext':\n        return __jsx(AppContextProvider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, __jsx(UseContext, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n\n      case 'UseMemo':\n        return __jsx(UseMemo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n\n      case 'Redux':\n        return __jsx(Provider, {\n          store: store,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, __jsx(Redux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n\n      case 'Router':\n        return __jsx(Router, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n\n      case 'SetState':\n        return __jsx(SetState, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n\n      case 'ComponentDidMount':\n        return __jsx(ComponentDidMount, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n\n      default:\n        return __jsx(UseState, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col d-flex justify-content-around m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, sandboxButtons())), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col text-white bg-secondary text-center font-weight-bold p-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Sandbox Below\")), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col m-5 justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, displaySandbox())));\n};\n\nexport default Scenes; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":{"version":3,"sources":["/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/index.js"],"names":["React","useState","Provider","store","UseState","UseEffect","UseContext","UseMemo","Redux","Router","SetState","ComponentDidMount","AppContextProvider","Scenes","activeSandbox","setActiveSandbox","changeSandbox","e","innerText","target","sandboxButtons","buttonsArray","buttons","map","buttonName","index","outline","backgroundColor","displaySandbox"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport store from '../redux/store';\n// import { connect } from 'react-redux';\nimport './styles.sass';\nimport UseState from './sandboxes/useState';\nimport UseEffect from './sandboxes/useEffect';\nimport UseContext from './sandboxes/useContext';\nimport UseMemo from './sandboxes/useMemo';\nimport Redux from './sandboxes/redux';\nimport Router from './sandboxes/router';\nimport SetState from './sandboxes/setState';\nimport ComponentDidMount from './sandboxes/componentDidMount';\nimport AppContextProvider from '../context/appContextProvider';\n\n// import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst Scenes = () => {\n  const [activeSandbox, setActiveSandbox] = useState('UseState');\n\n  function changeSandbox(e) {\n    const { innerText } = e.target;\n    setActiveSandbox(innerText);\n  }\n\n  function sandboxButtons() {\n    const buttonsArray = [\n      'UseState',\n      'UseEffect',\n      'UseContext',\n      'UseMemo',\n      '|',\n      'Redux',\n      'Router',\n      '|',\n      'SetState',\n      'ComponentDidMount'\n    ];\n\n    const buttons = buttonsArray.map((buttonName, index) => {\n      if (buttonName === '|') {\n        return <div key={buttonName + index}>{buttonName}</div>;\n      }\n\n      return (\n        <button\n          key={buttonName + index}\n          type=\"button\"\n          onClick={changeSandbox}\n          style={\n            activeSandbox === buttonName\n              ? { outline: 'none', backgroundColor: 'cornflowerblue' }\n              : null\n          }\n        >\n          {buttonName}\n        </button>\n      );\n    });\n\n    return <>{buttons}</>;\n  }\n\n  function displaySandbox() {\n    switch (activeSandbox) {\n      case 'UseState':\n        return <UseState />;\n\n      case 'UseEffect':\n        return <UseEffect />;\n\n      case 'UseContext':\n        return (\n          <AppContextProvider>\n            <UseContext />\n          </AppContextProvider>\n        );\n\n      case 'UseMemo':\n        return <UseMemo />;\n\n      case 'Redux':\n        return (\n          <Provider store={store}>\n            <Redux />\n          </Provider>\n        );\n\n      case 'Router':\n        return <Router />;\n\n      case 'SetState':\n        return <SetState />;\n\n      case 'ComponentDidMount':\n        return <ComponentDidMount />;\n\n      default:\n        return <UseState />;\n    }\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col d-flex justify-content-around m-3\">\n          {sandboxButtons()}\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col text-white bg-secondary text-center font-weight-bold p-1\">\n          Sandbox Below\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col m-5 justify-content-center\">{displaySandbox()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Scenes;\n// export default connect(mapStateToProps, mapDispatchToProps)(Scenes);\n"]},"metadata":{},"sourceType":"module"}