{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react'; // import { connect } from 'react-redux';\n\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseEffectAndState = () => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: intervalCount,\n    1: setIntervalCount\n  } = useState(0);\n  const {\n    0: buttonCount,\n    1: setButtonCount\n  } = useState(0);\n  const {\n    0: effectCount,\n    1: setEffectCount\n  } = useState(0);\n  useEffect(() => {\n    const effectInterval = setInterval(() => setCount(prevCount => prevCount + 1), 50);\n    if (intervalCount === 20) clearInterval(effectInterval);\n    return () => clearInterval(effectInterval);\n  }, [intervalCount]);\n  useEffect(() => {\n    if (count % 10 === 0) setIntervalCount(prevCount => prevCount + 1);\n  }, [count]);\n  useEffect(() => {\n    if (!(buttonCount % 2)) setEffectCount(lastCount => lastCount + 1);\n  }, [buttonCount]);\n  return __jsx(React.Fragment, null, `${count}. This next number increments at each interval of 10 and stops both counters once its value reaches 20 => ${intervalCount}`, __jsx(\"div\", {\n    className: \"mt-5\"\n  }, \"Button Count\", buttonCount), __jsx(\"button\", {\n    type: \"button\",\n    className: \"mt-3\",\n    onClick: () => setButtonCount(buttonCountVal => buttonCountVal + 1)\n  }, \"Click Here to Increase the State Count Directly Above\"), __jsx(\"div\", {\n    className: \"mt-3 mb-5\"\n  }, \"Effect Count Should Increase When Button Count is Even:\", effectCount), __jsx(UseStateChild, null));\n};\n\nexport default UseEffectAndState; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}