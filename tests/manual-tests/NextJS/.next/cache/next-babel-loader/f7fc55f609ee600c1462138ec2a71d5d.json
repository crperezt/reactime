{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './styles.sass';\nimport { increaseCount } from '../../redux/actions/actions';\n\nvar ComponentDidMount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComponentDidMount, _Component);\n\n  function ComponentDidMount(props) {\n    var _this;\n\n    _classCallCheck(this, ComponentDidMount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComponentDidMount).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"increaseCount\", function () {\n      _this.setState(function (prevState) {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    });\n\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(ComponentDidMount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.countInterval = setInterval(this.increaseCount, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.countInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.count;\n      return __jsx(\"div\", null, __jsx(\"div\", null, \"Count will automatically increase as setState is called at an interval\", \" \".concat(count)));\n    }\n  }]);\n\n  return ComponentDidMount;\n}(Component);\n\nexport default ComponentDidMount;","map":null,"metadata":{},"sourceType":"module"}