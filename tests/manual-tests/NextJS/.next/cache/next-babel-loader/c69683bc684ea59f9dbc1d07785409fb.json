{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nvar UseMemo = function UseMemo() {\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(false),\n      frozen = _useState2[0],\n      setFrozen = _useState2[1];\n\n  var _useState3 = useState(0),\n      stateCount = _useState3[0],\n      setStateCount = _useState3[1];\n\n  var countDisplay = useMemo(function () {\n    return function () {\n      return __jsx(\"div\", null, \"Count\", \" \".concat(count));\n    };\n  }, [frozen ? null : count]);\n  return __jsx(\"div\", null, countDisplay(), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setCount(function (lastCount) {\n        return lastCount + 1;\n      });\n    },\n    style: frozen ? {\n      backgroundColor: 'red'\n    } : null\n  }, \"Click Here to Increase the Count\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setFrozen(function (lastBoolean) {\n        return !lastBoolean;\n      });\n    },\n    className: \"ml-4\"\n  }, \"Click Here to Toggle Freezing the Count. Status:\", __jsx(\"span\", {\n    className: \"font-weight-bold\"\n  }, frozen ? ' Frozen' : ' Not Frozen')), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, \"State Button Count\", \" \".concat(stateCount)), __jsx(\"button\", {\n    className: \"mb-5\",\n    type: \"button\",\n    onClick: function onClick() {\n      return setStateCount(function (lastCount) {\n        return lastCount + 1;\n      });\n    }\n  }, \"Click Here to Increase the Count (Data Stored in State)\"), __jsx(UseStateChild, null));\n};\n\nexport default UseMemo; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}