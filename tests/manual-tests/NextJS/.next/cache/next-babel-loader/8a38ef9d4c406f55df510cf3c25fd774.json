{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/componentDidMount.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './styles.sass';\nimport { increaseCount } from '../../redux/actions/actions';\n\nvar ComponentDidMount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComponentDidMount, _Component);\n\n  function ComponentDidMount(props) {\n    var _this;\n\n    _classCallCheck(this, ComponentDidMount);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComponentDidMount).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"increaseCount\", function () {\n      _this.setState(function (prevState) {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    });\n\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(ComponentDidMount, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.countInterval = setInterval(this.increaseCount, 100);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.countInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.count;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Count will automatically increase as setState is called at an interval\", \" \".concat(count)));\n    }\n  }]);\n\n  return ComponentDidMount;\n}(Component);\n\nexport default ComponentDidMount;","map":{"version":3,"sources":["/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/componentDidMount.js"],"names":["React","Component","increaseCount","ComponentDidMount","props","setState","prevState","count","state","countInterval","setInterval","clearInterval"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,SAASC,aAAT,QAA8B,6BAA9B;;IAEMC,iB;;;;;AACJ,6BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,2FAAMA,KAAN;;AADiB,oEAgBH,YAAM;AACpB,YAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,eAAK;AAAEC,UAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AAA3B,SAAL;AAAA,OAAvB;AACD,KAlBkB;;AAGjB,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,WAAKE,aAAL,GAAqBC,WAAW,CAAC,KAAKR,aAAN,EAAqB,GAArB,CAAhC;AACD;;;2CAEsB;AACrBS,MAAAA,aAAa,CAAC,KAAKF,aAAN,CAAb;AACD;;;6BAMQ;AAAA,UACCF,KADD,GACW,KAAKC,KADhB,CACCD,KADD;AAGP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAEOA,KAFP,EADF,CADF;AAQD;;;;EAhC6BN,S;;AAkChC,eAAeE,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport './styles.sass';\nimport { increaseCount } from '../../redux/actions/actions';\n\nclass ComponentDidMount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    this.countInterval = setInterval(this.increaseCount, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.countInterval);\n  }\n\n  increaseCount = () => {\n    this.setState(prevState => ({ count: prevState.count + 1 }));\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <div>\n        <div>\n          Count will automatically increase as setState is called at an interval\n          {` ${count}`}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ComponentDidMount;\n"]},"metadata":{},"sourceType":"module"}