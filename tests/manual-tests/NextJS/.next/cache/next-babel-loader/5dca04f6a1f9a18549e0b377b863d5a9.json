{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport UseStateChild from './useStateChild';\nimport './styles.sass';\nimport * as actions from '../../redux/actions/actions';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.core.count\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    increaseCount: function increaseCount() {\n      return dispatch(actions.increaseCount());\n    }\n  };\n};\n\nvar Scenes = function Scenes(_ref) {\n  var count = _ref.count,\n      increaseCount = _ref.increaseCount;\n\n  var _useState = useState(0),\n      stateCount = _useState[0],\n      setStateCount = _useState[1];\n\n  return __jsx(\"div\", null, __jsx(\"div\", null, \"Count\", \" \".concat(count)), __jsx(\"button\", {\n    type: \"button\",\n    onClick: increaseCount\n  }, \"Click Here to Increase the Count (Redux Data)\"), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, \"State Button Count\", \" \".concat(stateCount)), __jsx(\"button\", {\n    className: \"mb-5\",\n    type: \"button\",\n    onClick: function onClick() {\n      return setStateCount(function (lastCount) {\n        return lastCount + 1;\n      });\n    }\n  }, \"Click Here to Increase the Count (Data Stored in State)\"), __jsx(UseStateChild, null));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}