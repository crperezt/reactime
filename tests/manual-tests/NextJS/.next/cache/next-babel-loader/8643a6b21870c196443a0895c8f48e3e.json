{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport './styles.sass';\nimport { increaseCount } from '../../redux/actions/actions';\n\nclass ComponentDidMount extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"increaseCount\", () => {\n      this.setState(prevState => ({\n        count: prevState.count + 1\n      }));\n    });\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    this.countInterval = setInterval(this.increaseCount, 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.countInterval);\n  }\n\n  render() {\n    const {\n      count\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(\"div\", null, \"Count will automatically increase as setState is called at an interval\", ` ${count}`));\n  }\n\n}\n\nexport default ComponentDidMount;","map":null,"metadata":{},"sourceType":"module"}