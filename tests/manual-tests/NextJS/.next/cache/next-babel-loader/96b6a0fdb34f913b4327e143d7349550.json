{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable react/jsx-one-expression-per-line */\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable no-undef */\nimport React, { useEffect } from 'react'; // import { connect } from 'react-redux';\n\nimport './styles.sass';\nimport UseEffectAndState from './useEffectAndState'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseEffect = () => {\n  useEffect(() => {\n    const effectDiv = document.getElementById('effectDiv'); //* Create three divs to append to effectDiv\n\n    const newDivElement = document.createElement('div');\n    const newDivTextNode = document.createTextNode('New Div');\n    const newDivElement2 = document.createElement('div');\n    const newDivTextNode2 = document.createTextNode('New Div 2');\n    const newDivElement3 = document.createElement('div');\n    const newDivTextNode3 = document.createTextNode('New Div 3');\n    newDivElement.appendChild(newDivTextNode);\n    newDivElement2.appendChild(newDivTextNode2);\n    newDivElement3.appendChild(newDivTextNode3);\n    const timeout1 = setTimeout(() => effectDiv.appendChild(newDivElement), 300);\n    const timeout2 = setTimeout(() => effectDiv.appendChild(newDivElement2), 1200);\n    const timeout3 = setTimeout(() => effectDiv.appendChild(newDivElement3), 2200);\n    return () => {\n      clearTimeout(timeout1);\n      clearTimeout(timeout2);\n      clearTimeout(timeout3);\n    };\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"font-weight-bold\"\n  }, \"3 new divs will appear below due to elements being appended within useEffect (setTimeout is used)\", __jsx(\"div\", {\n    id: \"effectDiv\"\n  })), __jsx(\"div\", {\n    className: \"bg-primary p-1 my-3 mx-5 vh-5 text-white text-center font-weight-bold\"\n  }, \"New Test Below\"), __jsx(\"div\", {\n    className: \"font-weight-bold\"\n  }, \"UseEffect triggers an interval that changes this state variable =>\", ' ', __jsx(UseEffectAndState, null)));\n};\n\nexport default UseEffect; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}