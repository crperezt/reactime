{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseMemo = () => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: frozen,\n    1: setFrozen\n  } = useState(false);\n  const {\n    0: stateCount,\n    1: setStateCount\n  } = useState(0);\n  const countDisplay = useMemo(() => () => __jsx(\"div\", null, \"Count\", ` ${count}`), [frozen ? null : count]);\n  return __jsx(\"div\", null, countDisplay(), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setCount(lastCount => lastCount + 1),\n    style: frozen ? {\n      backgroundColor: 'red'\n    } : null\n  }, \"Click Here to Increase the Count\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setFrozen(lastBoolean => !lastBoolean),\n    className: \"ml-4\"\n  }, \"Click Here to Toggle Freezing the Count. Status:\", __jsx(\"span\", {\n    className: \"font-weight-bold\"\n  }, frozen ? ' Frozen' : ' Not Frozen')), __jsx(\"div\", {\n    className: \"mt-5\"\n  }, \"State Button Count\", ` ${stateCount}`), __jsx(\"button\", {\n    className: \"mb-5\",\n    type: \"button\",\n    onClick: () => setStateCount(lastCount => lastCount + 1)\n  }, \"Click Here to Increase the Count (Data Stored in State)\"), __jsx(UseStateChild, null));\n};\n\nexport default UseMemo; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":null,"metadata":{},"sourceType":"module"}