{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useMemo.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nvar UseMemo = function UseMemo() {\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState(false),\n      frozen = _useState2[0],\n      setFrozen = _useState2[1];\n\n  var _useState3 = useState(0),\n      stateCount = _useState3[0],\n      setStateCount = _useState3[1];\n\n  var countDisplay = useMemo(function () {\n    return function () {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Count\", \" \".concat(count));\n    };\n  }, [frozen ? null : count]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, countDisplay(), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setCount(function (lastCount) {\n        return lastCount + 1;\n      });\n    },\n    style: frozen ? {\n      backgroundColor: 'red'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Click Here to Increase the Count\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return setFrozen(function (lastBoolean) {\n        return !lastBoolean;\n      });\n    },\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Click Here to Toggle Freezing the Count. Status:\", __jsx(\"span\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, frozen ? ' Frozen' : ' Not Frozen')), __jsx(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"State Button Count\", \" \".concat(stateCount)), __jsx(\"button\", {\n    className: \"mb-5\",\n    type: \"button\",\n    onClick: function onClick() {\n      return setStateCount(function (lastCount) {\n        return lastCount + 1;\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Click Here to Increase the Count (Data Stored in State)\"), __jsx(UseStateChild, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nexport default UseMemo; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":{"version":3,"sources":["/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useMemo.js"],"names":["React","useState","useMemo","UseStateChild","UseMemo","count","setCount","frozen","setFrozen","stateCount","setStateCount","countDisplay","lastCount","backgroundColor","lastBoolean"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACMH,QAAQ,CAAC,CAAD,CADd;AAAA,MACbI,KADa;AAAA,MACNC,QADM;;AAAA,mBAEQL,QAAQ,CAAC,KAAD,CAFhB;AAAA,MAEbM,MAFa;AAAA,MAELC,SAFK;;AAAA,mBAGgBP,QAAQ,CAAC,CAAD,CAHxB;AAAA,MAGbQ,UAHa;AAAA,MAGDC,aAHC;;AAKpB,MAAMC,YAAY,GAAGT,OAAO,CAC1B;AAAA,WAAM;AAAA,aACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEOG,KAFP,EADI;AAAA,KAAN;AAAA,GAD0B,EAO1B,CAACE,MAAM,GAAG,IAAH,GAAUF,KAAjB,CAP0B,CAA5B;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,YAAY,EADf,EAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAML,QAAQ,CAAC,UAAAM,SAAS;AAAA,eAAIA,SAAS,GAAG,CAAhB;AAAA,OAAV,CAAd;AAAA,KAFX;AAGE,IAAA,KAAK,EAAEL,MAAM,GAAG;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAAH,GAAgC,IAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAHF,EAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE;AAAA,aAAML,SAAS,CAAC,UAAAM,WAAW;AAAA,eAAI,CAACA,WAAL;AAAA,OAAZ,CAAf;AAAA,KAFX;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAME;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,GAAG,SAAH,GAAe,aADxB,CANF,CAXF,EAsBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAEOE,UAFP,EAtBF,EA2BE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,aAAa,CAAC,UAAAE,SAAS;AAAA,eAAIA,SAAS,GAAG,CAAhB;AAAA,OAAV,CAAnB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DA3BF,EAmCE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF;AAuCD,CAtDD;;AAwDA,eAAeR,OAAf,C,CACA","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass';\n\n// import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseMemo = () => {\n  const [count, setCount] = useState(0);\n  const [frozen, setFrozen] = useState(false);\n  const [stateCount, setStateCount] = useState(0);\n\n  const countDisplay = useMemo(\n    () => () => (\n      <div>\n        Count\n        {` ${count}`}\n      </div>\n    ),\n    [frozen ? null : count]\n  );\n\n  return (\n    <div>\n      {countDisplay()}\n\n      <button\n        type=\"button\"\n        onClick={() => setCount(lastCount => lastCount + 1)}\n        style={frozen ? { backgroundColor: 'red' } : null}\n      >\n        Click Here to Increase the Count\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => setFrozen(lastBoolean => !lastBoolean)}\n        className=\"ml-4\"\n      >\n        Click Here to Toggle Freezing the Count. Status:\n        <span className=\"font-weight-bold\">\n          {frozen ? ' Frozen' : ' Not Frozen'}\n        </span>\n      </button>\n\n      <div className=\"mt-5\">\n        State Button Count\n        {` ${stateCount}`}\n      </div>\n\n      <button\n        className=\"mb-5\"\n        type=\"button\"\n        onClick={() => setStateCount(lastCount => lastCount + 1)}\n      >\n        Click Here to Increase the Count (Data Stored in State)\n      </button>\n\n      <UseStateChild />\n    </div>\n  );\n};\n\nexport default UseMemo;\n// export default connect(mapStateToProps, mapDispatchToProps)(Scenes);\n"]},"metadata":{},"sourceType":"module"}