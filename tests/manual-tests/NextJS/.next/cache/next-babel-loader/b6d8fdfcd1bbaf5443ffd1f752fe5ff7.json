{"ast":null,"code":"var _jsxFileName = \"/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useMemo.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass'; // import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseMemo = () => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(0);\n  const {\n    0: frozen,\n    1: setFrozen\n  } = useState(false);\n  const {\n    0: stateCount,\n    1: setStateCount\n  } = useState(0);\n  const countDisplay = useMemo(() => () => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Count\", ` ${count}`), [frozen ? null : count]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, countDisplay(), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setCount(lastCount => lastCount + 1),\n    style: frozen ? {\n      backgroundColor: 'red'\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Click Here to Increase the Count\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setFrozen(lastBoolean => !lastBoolean),\n    className: \"ml-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Click Here to Toggle Freezing the Count. Status:\", __jsx(\"span\", {\n    className: \"font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, frozen ? ' Frozen' : ' Not Frozen')), __jsx(\"div\", {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"State Button Count\", ` ${stateCount}`), __jsx(\"button\", {\n    className: \"mb-5\",\n    type: \"button\",\n    onClick: () => setStateCount(lastCount => lastCount + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Click Here to Increase the Count (Data Stored in State)\"), __jsx(UseStateChild, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nexport default UseMemo; // export default connect(mapStateToProps, mapDispatchToProps)(Scenes);","map":{"version":3,"sources":["/mnt/d/Libraries/Documents/codeRepos/reactime/sandboxes/manual-tests/NextJS/Frontend/src/scenes/sandboxes/useMemo.js"],"names":["React","useState","useMemo","UseStateChild","UseMemo","count","setCount","frozen","setFrozen","stateCount","setStateCount","countDisplay","lastCount","backgroundColor","lastBoolean"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM;AAAA,OAACM,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAA,OAACQ,UAAD;AAAA,OAAaC;AAAb,MAA8BT,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAMU,YAAY,GAAGT,OAAO,CAC1B,MAAM,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEI,IAAGG,KAAM,EAFb,CAFwB,EAO1B,CAACE,MAAM,GAAG,IAAH,GAAUF,KAAjB,CAP0B,CAA5B;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,YAAY,EADf,EAGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAACM,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAFzB;AAGE,IAAA,KAAK,EAAEL,MAAM,GAAG;AAAEM,MAAAA,eAAe,EAAE;AAAnB,KAAH,GAAgC,IAH/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAHF,EAWE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAML,SAAS,CAACM,WAAW,IAAI,CAACA,WAAjB,CAF1B;AAGE,IAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAME;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,MAAM,GAAG,SAAH,GAAe,aADxB,CANF,CAXF,EAsBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEI,IAAGE,UAAW,EAFlB,CAtBF,EA2BE;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAE,MAAMC,aAAa,CAACE,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DA3BF,EAmCE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADF;AAuCD,CAtDD;;AAwDA,eAAeR,OAAf,C,CACA","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport UseStateChild from './useStateChild';\nimport './styles.sass';\n\n// import * as actions from '../redux/actions/actions';\n// const mapStateToProps = state => ({});\n// const mapDispatchToProps = dispatch => ({});\n\nconst UseMemo = () => {\n  const [count, setCount] = useState(0);\n  const [frozen, setFrozen] = useState(false);\n  const [stateCount, setStateCount] = useState(0);\n\n  const countDisplay = useMemo(\n    () => () => (\n      <div>\n        Count\n        {` ${count}`}\n      </div>\n    ),\n    [frozen ? null : count]\n  );\n\n  return (\n    <div>\n      {countDisplay()}\n\n      <button\n        type=\"button\"\n        onClick={() => setCount(lastCount => lastCount + 1)}\n        style={frozen ? { backgroundColor: 'red' } : null}\n      >\n        Click Here to Increase the Count\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => setFrozen(lastBoolean => !lastBoolean)}\n        className=\"ml-4\"\n      >\n        Click Here to Toggle Freezing the Count. Status:\n        <span className=\"font-weight-bold\">\n          {frozen ? ' Frozen' : ' Not Frozen'}\n        </span>\n      </button>\n\n      <div className=\"mt-5\">\n        State Button Count\n        {` ${stateCount}`}\n      </div>\n\n      <button\n        className=\"mb-5\"\n        type=\"button\"\n        onClick={() => setStateCount(lastCount => lastCount + 1)}\n      >\n        Click Here to Increase the Count (Data Stored in State)\n      </button>\n\n      <UseStateChild />\n    </div>\n  );\n};\n\nexport default UseMemo;\n// export default connect(mapStateToProps, mapDispatchToProps)(Scenes);\n"]},"metadata":{},"sourceType":"module"}